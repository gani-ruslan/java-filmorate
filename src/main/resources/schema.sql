CREATE TABLE IF NOT EXISTS mpa_rating (
id INTEGER PRIMARY KEY,
name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
id INTEGER PRIMARY KEY,
name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(255) NOT NULL,
login VARCHAR(50) NOT NULL,
name VARCHAR(100),
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(255) NOT NULL,
description VARCHAR(200),
release_date DATE NOT NULL,
duration INTEGER NOT NULL,
mpa_rating_id INTEGER,
FOREIGN KEY (mpa_rating_id) REFERENCES mpa_rating(id)
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id BIGINT NOT NULL,
genre_id INTEGER NOT NULL,
PRIMARY KEY (film_id, genre_id),
FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_likes (
film_id BIGINT NOT NULL,
user_id BIGINT NOT NULL,
PRIMARY KEY (film_id, user_id),
FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friendships (
user_id BIGINT NOT NULL,
friend_id BIGINT NOT NULL,
PRIMARY KEY (user_id, friend_id),
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);
